#!/bin/sh
# Automatically generated file
# Source file example/parallel-logresolve.sh
#!/usr/bin/env sgsh
#
# SYNOPSIS Parallel logresolve
# DESCRIPTION
# Resolve IP addresses of web logs in parallel.
# Demonstrates parallel execution.
#
#  Copyright 2013 Diomidis Spinellis
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

# Add record number as the second field
awk '{$2 = ++n " " $2; print}' "$@" |

# Two parallel line scatter invocations
(

	export SGDIR=/tmp/sg-$$.0

	rm -rf $SGDIR

	# Cleanup on exit or interrupt
	cleanup()
	{
		SIGNAL=$1
		[ $SIGNAL = EXIT ] || echo sgsh interrupted. Cleaning up... 1>&2

		# Stop key-value stores
		
		# Kill processes we have launched in the background
		kill $SGPID 2>/dev/null

		# Remove temporary directory
		rm -rf "$SGDIR"

		# Propagate real signals and exit with non-0
		if [ $SIGNAL != EXIT ]
		then
			trap - $SIGNAL EXIT
			kill -s $SIGNAL $$
		fi

		# Exit with the original exit value
		exit

	}

	for sig in HUP INT QUIT TERM EXIT
	do
		trap "cleanup $sig" $sig
	done

	mkdir $SGDIR
	
mkfifo 	$SGDIR/npfo-resolved.0 \
	$SGDIR/npfo-resolved.1 \
	$SGDIR/npfo-resolved.2 \
	$SGDIR/npfo-resolved.3 \
	$SGDIR/npfo-resolved.4 \
	$SGDIR/npfo-resolved.5 \
	$SGDIR/npfo-resolved.6 \
	$SGDIR/npfo-resolved.7 \
	$SGDIR/npfo-resolved.8 \
	$SGDIR/npfo-resolved.9 \
	$SGDIR/npi-0.0.0 \
	$SGDIR/npi-0.0.1 \
	$SGDIR/npi-0.0.2 \
	$SGDIR/npi-0.0.3 \
	$SGDIR/npi-0.0.4 \
	$SGDIR/npi-0.0.5 \
	$SGDIR/npi-0.0.6 \
	$SGDIR/npi-0.0.7 \
	$SGDIR/npi-0.0.8 \
	$SGDIR/npi-0.0.9

sgsh-tee  -s -o $SGDIR/npi-0.0.0 -o $SGDIR/npi-0.0.1 -o $SGDIR/npi-0.0.2 -o $SGDIR/npi-0.0.3 -o $SGDIR/npi-0.0.4 -o $SGDIR/npi-0.0.5 -o $SGDIR/npi-0.0.6 -o $SGDIR/npi-0.0.7 -o $SGDIR/npi-0.0.8 -o $SGDIR/npi-0.0.9 <&3 3<&-   & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.0 >$SGDIR/npfo-resolved.0 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.1 >$SGDIR/npfo-resolved.1 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.2 >$SGDIR/npfo-resolved.2 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.3 >$SGDIR/npfo-resolved.3 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.4 >$SGDIR/npfo-resolved.4 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.5 >$SGDIR/npfo-resolved.5 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.6 >$SGDIR/npfo-resolved.6 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.7 >$SGDIR/npfo-resolved.7 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.8 >$SGDIR/npfo-resolved.8 & SGPID="$! $SGPID"
 {  logresolve | sgsh-tee -I
} <$SGDIR/npi-0.0.9 >$SGDIR/npfo-resolved.9 & SGPID="$! $SGPID"

# Gather the results
	# Merge the files on the second numerical field
	sort -m -k2n $SGDIR/npfo-resolved.0 $SGDIR/npfo-resolved.1 $SGDIR/npfo-resolved.2 $SGDIR/npfo-resolved.3 $SGDIR/npfo-resolved.4 $SGDIR/npfo-resolved.5 $SGDIR/npfo-resolved.6 $SGDIR/npfo-resolved.7 $SGDIR/npfo-resolved.8 $SGDIR/npfo-resolved.9 |

	# Remove second field
	cut -d ' ' -f 1,3-

)  3<&0 
